/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zookeep;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tktks
 */
public class Animal extends javax.swing.JFrame {

    /**
     * Creates new form Animal
     */
    public Animal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        a = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        b = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        c = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        d = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        g = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        h = new javax.swing.JTextPane();
        jLabel7 = new javax.swing.JLabel();
        e1 = new javax.swing.JComboBox<>();
        f = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        a.setEditable(false);
        jScrollPane1.setViewportView(a);

        b.setBackground(new java.awt.Color(204, 255, 204));
        b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(b);

        jScrollPane3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane3KeyPressed(evt);
            }
        });

        c.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(c);

        d.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(d);

        g.setEditable(false);
        g.setBackground(new java.awt.Color(204, 255, 255));
        g.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gKeyPressed(evt);
            }
        });
        jScrollPane7.setViewportView(g);

        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Animal", "Name", "Age", "health concerns", "feed schedule", "Date", "Comments"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(table);

        jButton2.setText("Show DB");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Animal");

        jLabel2.setText("Name");

        jLabel3.setText("Age");

        jLabel4.setText("Health concerns");

        jLabel5.setText("Feeding schedule X per day");

        jLabel6.setText("Date");

        jButton3.setText("Show animal");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Alarms");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        h.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hKeyPressed(evt);
            }
        });
        jScrollPane9.setViewportView(h);

        jLabel7.setText("Comments: add any health concerns or feeding comments below.");

        e1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        e1.setSelectedIndex(-1);
        e1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                e1KeyPressed(evt);
            }
        });

        f.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Graze", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11+" }));
        f.setSelectedIndex(-1);
        f.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fKeyPressed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/zoo.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(e1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(165, 165, 165))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(253, 253, 253)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            //calls the Driver class
            Driver Driver = new Driver();
            //inputs the driver variable into animal class
            String myDriver = (Driver.myDriver);
            //inputs the url variable into the animal class
            String url = (Driver.url);
            Class.forName(myDriver);
            Connection con = DriverManager.getConnection(url);
            java.sql.Statement statement = con.createStatement();
            // sets the default names of the table
            DefaultTableModel model = new DefaultTableModel(new String[]{"id", "Animal", "Name", "Age", "Health Concerns", "Feeding Schedule", "Date", "Comments"}, 0);
            //queries the database and gets the results for the table set
            statements statements = new statements();
            ResultSet rs = statement.executeQuery(statements.query1);

            while (rs.next()) {
                String id = rs.getString("id");
                String Animal = rs.getString("Animal");
                String Name = rs.getString("Name");
                String Age = rs.getString("Age");
                String HealthConc = rs.getString("HealthConc");
                String Feedsched = rs.getString("Feedsched");
                String Date = rs.getString("Date");
                String Comments = rs.getString("Comments");

                model.addRow(new Object[]{id, Animal, Name, Age, HealthConc, Feedsched, Date, Comments});
                table.setModel(model);

            }

        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        //verifies that all the text inputs are not null
        if (b.getText().isEmpty() || c.getText().isEmpty() || d.getText().isEmpty() || e1.getSelectedItem() == null || f.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "fill in all items");
            
        } else if  (e1.getSelectedItem().toString().equals("Yes") && f.getSelectedItem().toString().equals("None"))  {
            JOptionPane.showMessageDialog(null, "If there is a health concern and no feeding comments need filled in");
            // verify that if their is a health concern that the comments gets filled in
        } else if (e1.getSelectedItem().toString().equals("Yes") && h.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "if there is a health concern comments need filled in");

        } else {
            try {
                //declares the variable from the driver class
                Driver Driver = new Driver();
                //gets the variable from the driver class
                String myDriver = (Driver.myDriver);
                //gets the url variable from the driver class
                String url = (Driver.url);
                //uses the driver for establishing the connection
                Class.forName(myDriver);
                //try catch statement for the sql db connection and inputes
                try (Connection con = DriverManager.getConnection(url)) {

                    LocalDate today = LocalDate.now();
                    java.sql.Statement statement = con.createStatement();

                    statements statements = new statements();
                    //queries the database
                    String ShowDB = (statements.ShowDB);

                    ResultSet rs = statement.executeQuery(ShowDB);

                    rs.next();

                    String name = rs.getString(1);

                    int name1 = Integer.parseInt(name);
                    
                    int name2 = name1 + 1;

                    a.setText("" + name2);

                    g.setText("" + today);

                    String ee1 = e1.getSelectedItem().toString();
                    String ff1 = f.getSelectedItem().toString();

                    String query = (statements.query);
                    // runs the query and replaces the ? with the text
                    java.sql.PreparedStatement pst = con.prepareStatement(query);

                    pst.setString(1, a.getText());
                    pst.setString(2, b.getText());
                    pst.setString(3, c.getText());
                    pst.setString(4, d.getText());
                    pst.setString(5, ee1);
                    pst.setString(6, ff1);
                    pst.setString(7, g.getText());
                    pst.setString(8, h.getText());

                    pst.executeUpdate();

                }

                JOptionPane.showMessageDialog(null, "Record created");
                // clears the results after success
                a.setText("");
                b.setText("");
                c.setText("");
                d.setText("");
                e1.setSelectedIndex(-1);
                f.setSelectedIndex(-1);
                g.setText("");
                h.setText("");

            } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }

            try {

                //declares the variable from the driver class
                Driver Driver = new Driver();
                //gets the variable from the driver class
                String myDriver = (Driver.myDriver);
                //gets the url variable from the driver class
                String url = (Driver.url);
                //uses the driver for establishing the connection

                Class.forName(myDriver);
                Connection con = DriverManager.getConnection(url);
                java.sql.Statement statement = con.createStatement();

                DefaultTableModel model = new DefaultTableModel(new String[]{"id", "Animal", "Name", "Age", "Health Concerns", "Feeding Schedule", "Date", "Comments"}, 0);
                
                statements statements = new statements();
                ResultSet rs = statement.executeQuery(statements.query1);

                while (rs.next()) {
                    String id = rs.getString("id");
                    String Animal = rs.getString("Animal");
                    String Name = rs.getString("Name");
                    String Age = rs.getString("Age");
                    String HealthConc = rs.getString("HealthConc");
                    String Feedsched = rs.getString("Feedsched");
                    String Date = rs.getString("Date");
                    String Comments = rs.getString("Comments");

                    model.addRow(new Object[]{id, Animal, Name, Age, HealthConc, Feedsched, Date, Comments});
                    table.setModel(model);

                }

            } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        try {
            //declares the variable from the driver class
            Driver Driver = new Driver();
            //gets the variable from the driver class
            String myDriver = (Driver.myDriver);
            //gets the url variable from the driver class
            String url = (Driver.url);
            //uses the driver for establishing the connection

            Class.forName(myDriver);
            Connection con = DriverManager.getConnection(url);

            DefaultTableModel model = new DefaultTableModel(new String[]{"id", "Animal", "Name", "Age", "Health Concerns", "Feeding Schedule", "Date", "Comments"}, 0);

            statements statements = new statements();
            java.sql.PreparedStatement st = con.prepareStatement(statements.queryAnimal);

            st.setString(1, b.getText());

            ResultSet rs = st.executeQuery();

            while (rs.next()) {
                String id = rs.getString("id");
                String Animal = rs.getString("Animal");
                String Name = rs.getString("Name");
                String Age = rs.getString("Age");
                String HealthConc = rs.getString("HealthConc");
                String Feedsched = rs.getString("Feedsched");
                String Date = rs.getString("Date");
                String Comments = rs.getString("Comments");

                model.addRow(new Object[]{id, Animal, Name, Age, HealthConc, Feedsched, Date, Comments});
                table.setModel(model);

            }

        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);

        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        try {
            //declares the variable from the driver class
            Driver Driver = new Driver();
            //gets the variable from the driver class
            String myDriver = (Driver.myDriver);
            //gets the url variable from the driver class
            String url = (Driver.url);
            //uses the driver for establishing the connection

            Class.forName(myDriver);
            Connection con = DriverManager.getConnection(url);

            DefaultTableModel model = new DefaultTableModel(new String[]{"id", "Animal", "Name", "Age", "Health Concerns", "Feeding Schedule", "Date", "Comments"}, 0);
            
            // gets the query from statements to show the top animal record inserted
            statements statements = new statements();
            java.sql.PreparedStatement st = con.prepareStatement(statements.queryshow1);

            st.setString(1, b.getText());

            ResultSet rs = st.executeQuery();

            while (rs.next()) {
                String id = rs.getString("id");
                String Animal = rs.getString("Animal");
                String Name = rs.getString("Name");
                String Age = rs.getString("Age");
                String HealthConc = rs.getString("HealthConc");
                String Feedsched = rs.getString("Feedsched");
                String Date = rs.getString("Date");
                String Comments = rs.getString("Comments");

                model.addRow(new Object[]{id, Animal, Name, Age, HealthConc, Feedsched, Date, Comments});
                table.setModel(model);

                if (HealthConc.equals("Yes")) {
                    JOptionPane.showMessageDialog(null, "There is a health concern that requires attention " + "\n" + "\n             " + Comments, "Alert", JOptionPane.WARNING_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(null, "At the moment all is well with " + Name);

                }

            }

        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void bKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            c.grabFocus();
            evt.consume();
            
        }
        
    }//GEN-LAST:event_bKeyPressed

    private void jScrollPane3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane3KeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jScrollPane3KeyPressed

    private void dKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            e1.grabFocus();
            evt.consume();
            }
    }//GEN-LAST:event_dKeyPressed

    private void e1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            f.grabFocus();
            evt.consume();
            }
    }//GEN-LAST:event_e1KeyPressed

    private void fKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            h.transferFocusBackward();
            evt.consume();
            }
    }//GEN-LAST:event_fKeyPressed

    private void gKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_gKeyPressed

    private void cKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cKeyPressed
        // TODO add your handling code here:
                if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            d.grabFocus();
            evt.consume();
                }
    }//GEN-LAST:event_cKeyPressed

    private void hKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hKeyPressed
        // TODO add your handling code here:
                        if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            jButton1.grabFocus();
            evt.consume();
                        }
    }//GEN-LAST:event_hKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Habitate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Habitate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Habitate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Habitate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Animal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane a;
    private javax.swing.JTextPane b;
    private javax.swing.JTextPane c;
    private javax.swing.JTextPane d;
    private javax.swing.JComboBox<String> e1;
    private javax.swing.JComboBox<String> f;
    private javax.swing.JTextPane g;
    private javax.swing.JTextPane h;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
