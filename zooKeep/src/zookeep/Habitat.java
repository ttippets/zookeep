/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zookeep;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tktks
 */
public class Habitat extends javax.swing.JFrame {

    /**
     * Creates new form Animals
     */
    public Habitat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        a = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        a1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        b = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        f = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        g = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        e1 = new javax.swing.JComboBox<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        c = new javax.swing.JTextPane();
        d = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(a);

        a1.setBackground(new java.awt.Color(204, 255, 204));
        a1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                a1KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(a1);

        jLabel1.setText("habitat");

        b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(b);

        jLabel2.setText("temp");

        jLabel3.setText("food source");

        jLabel4.setText("cleanliness");

        f.setEditable(false);
        f.setBackground(new java.awt.Color(153, 255, 255));
        jScrollPane6.setViewportView(f);

        jLabel5.setText("date");

        jScrollPane7.setViewportView(g);

        jLabel6.setText("comments");

        jButton1.setText("submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("show DB");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "habitat", "temperature", "food source", "food supply", "cleanliness", "date", "comments"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(table);

        jButton3.setText("search habitat");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        e1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pass", "Fail" }));
        e1.setSelectedIndex(-1);
        e1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                e1KeyPressed(evt);
            }
        });

        c.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cKeyPressed(evt);
            }
        });
        jScrollPane9.setViewportView(c);

        d.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Environment", "Daily", "Excess", "Moderate", "Low" }));
        d.setSelectedIndex(-1);
        d.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dKeyPressed(evt);
            }
        });

        jLabel7.setText("food supply");

        jButton4.setText("alarm");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/zoo.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel1)
                                        .addGap(53, 53, 53)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(17, 17, 17)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(20, 20, 20)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(jScrollPane8)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(137, 137, 137))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel7))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // checks to see if all the fields have inputs
        if (a1.getText().isEmpty() || b.getText().isEmpty() || c.getText().isEmpty() || e1.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "fill in all items");
        //checks if certain conditions exist before proceeding to input data
        } else if (d.getSelectedItem().toString().equals("Low") && e1.getSelectedItem().toString().equals("Fail") && g.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "if food supply is low and there is a cleanliness issue the comments need filled in");
        } else if (e1.getSelectedItem().toString().equals("Fail") && g.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "if there is a cleanliness concern comments need filled in");
        } else if (d.getSelectedItem().toString().equals("Low") && g.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "if food supply is low comments need filled in and food needs ordered");
        } else {
            //start the input process
            try {
                // get the driver statement from the driver class to connect to the DB
                Driver Driver = new Driver();
                String myDriver = (Driver.myDriver);
                //gets the url statement from the driver class to apply credintials to get into DB
                String url = (Driver.url);
                Class.forName(myDriver);
                try (Connection con = DriverManager.getConnection(url)) {
                    //automatically sets the date for the sql db
                    LocalDate today = LocalDate.now();
                    java.sql.Statement statement = con.createStatement();
                    //statement to run the query
                    statements statements = new statements();
                    // get the rs query and executes it
                    ResultSet rs = statement.executeQuery(statements.queryhabitatdb);

                    rs.next();
                    
                    String name = rs.getString(1);
                    //turns the string into an int
                    int name1 = Integer.parseInt(name);
                    
                    int name2 = name1 + 1;
                    //sets the id to automatically add 1
                    a.setText("" + name2);
                    //automatically applys the date to jtextpane
                    f.setText("" + today);
                    //converts the jcombox item to a string
                    String ee1 = d.getSelectedItem().toString();
                    String ff1 = e1.getSelectedItem().toString();
                    //statement to insert into the database
                    java.sql.PreparedStatement pst = con.prepareStatement(statements.queryinserthab);

                    pst.setString(1, a.getText());
                    pst.setString(2, a1.getText());
                    pst.setString(3, b.getText());
                    pst.setString(4, c.getText());
                    pst.setString(5, ee1);
                    pst.setString(6, ff1);
                    pst.setString(7, f.getText());
                    pst.setString(8, g.getText());

                    pst.executeUpdate();

                }
                //JOptionpane to show that record was succesfully created
                JOptionPane.showMessageDialog(null, "Record created");
                //clears all the text in all the boxes, and resets the combobox back to blank
                a.setText("");
                a1.setText("");
                b.setText("");
                c.setText("");
                e1.setSelectedIndex(-1);
                d.setSelectedIndex(-1);
                f.setText("");
                g.setText("");

            } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }

            try {
                // get the driver statement from the driver class to connect to the DB
                Driver Driver = new Driver();
                String myDriver = (Driver.myDriver);
                //gets the url statement from the driver class to apply credintials to get into DB
                String url = (Driver.url);
                Class.forName(myDriver);
                Connection con = DriverManager.getConnection(url);
                java.sql.Statement statement = con.createStatement();
                //sets the table text
                DefaultTableModel model = new DefaultTableModel(new String[]{"id", "habitat", "temperature", "food source", "food supply", "clean", "date", "Comments"}, 0);
                //runs the query to show the database in the table
                statements statements = new statements();
                ResultSet rs = statement.executeQuery(statements.queryshow1000);
                //result set gets the items in the sql database
                while (rs.next()) {
                    String id = rs.getString("id");
                    String habitat = rs.getString("habitat");
                    String temp = rs.getString("temp");
                    String foodsour = rs.getString("foodsour");
                    String foodsupp = rs.getString("foodsupp");
                    String clean = rs.getString("clean");
                    String date = rs.getString("date");
                    String comments = rs.getString("comments");

                    model.addRow(new Object[]{id, habitat, temp, foodsour, foodsupp, clean, date, comments});
                    table.setModel(model);

                }

            } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);

            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            // get the driver statement from the driver class to connect to the DB
            Driver Driver = new Driver();
            String myDriver = (Driver.myDriver);
            //gets the url statement from the driver class to apply credintials to get into DB
            String url = (Driver.url);
            Class.forName(myDriver);
            Connection con = DriverManager.getConnection(url);
            java.sql.Statement statement = con.createStatement();

            DefaultTableModel model = new DefaultTableModel(new String[]{"id", "habitat", "temperature", "food source", "food supply", "clean", "date", "Comments"}, 0);

            statements statements = new statements();
            ResultSet rs = statement.executeQuery(statements.queryshow1000);

            while (rs.next()) {
                String id = rs.getString("id");
                String habitat = rs.getString("habitat");
                String temp = rs.getString("temp");
                String foodsour = rs.getString("foodsour");
                String foodsupp = rs.getString("foodsupp");
                String clean = rs.getString("clean");
                String date = rs.getString("date");
                String comments = rs.getString("comments");

                model.addRow(new Object[]{id, habitat, temp, foodsour, foodsupp, clean, date, comments});
                table.setModel(model);

            }

        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            // get the driver statement from the driver class to connect to the DB
            Driver Driver = new Driver();
            String myDriver = (Driver.myDriver);
            //gets the url statement from the driver class to apply credintials to get into DB
            String url = (Driver.url);
            Class.forName(myDriver);
            Connection con = DriverManager.getConnection(url);
            //default table names
            DefaultTableModel model = new DefaultTableModel(new String[]{"ID", "Habitat", "Temperature", "Food Source", "Food Supply", "Cleanliness", "Date", "Comments"}, 0);

            statements statements = new statements();
            java.sql.PreparedStatement st = con.prepareStatement(statements.queryhabshow1);

            st.setString(1, a1.getText());

            ResultSet rs = st.executeQuery();

            

            //get the results from the SQL database
            while (rs.next()) {
                String id = rs.getString("id");
                String habitat = rs.getString("habitat");
                String temp = rs.getString("temp");
                String foodsour = rs.getString("foodsour");
                String foodsupp = rs.getString("foodsupp");

                String clean = rs.getString("clean");
                String date = rs.getString("date");
                String comments = rs.getString("comments");

                model.addRow(new Object[]{id, habitat, temp, foodsour, foodsupp, clean, date, comments});
                table.setModel(model);
                

            }

        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);

        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
 try {
            // get the driver statement from the driver class to connect to the DB
            Driver Driver = new Driver();
            String myDriver = (Driver.myDriver);
            //gets the url statement from the driver class to apply credintials to get into DB
            String url = (Driver.url);
            Class.forName(myDriver);
            Connection con = DriverManager.getConnection(url);

            DefaultTableModel model = new DefaultTableModel(new String[]{"ID", "Habitat", "Temperature", "Food Source", "Food Supply", "Cleanliness", "Date", "Comments"}, 0);

            statements statements = new statements();
            java.sql.PreparedStatement st = con.prepareStatement(statements.queryhabalarm);

            st.setString(1, a1.getText());

            ResultSet rs = st.executeQuery();
            
        
            //get the data from the SQL database
     while (rs.next()) {
         String id = rs.getString("id");
         String habitat = rs.getString("habitat");
         String temp = rs.getString("temp");
         String foodsour = rs.getString("foodsour");
         String foodsupp = rs.getString("foodsupp");

         String clean = rs.getString("clean");
         String date = rs.getString("date");
         String comments = rs.getString("comments");

         

             
         model.addRow(new Object[]{id, habitat, temp, foodsour, foodsupp, clean, date, comments});
         table.setModel(model);
         // check for the following conditions
          if (foodsupp.contains("Low") && clean.contains("Fail")){
             JOptionPane.showMessageDialog(null, "There is a food supply concern and cleanliness concert that requires attention " + "\n" + "\n             " + comments, "Alert", JOptionPane.WARNING_MESSAGE);
         } else if (foodsupp.contains("Low")) {
             JOptionPane.showMessageDialog(null, "There is a food supply concern that requires attention " + "\n" + "\n             " + comments, "Alert", JOptionPane.WARNING_MESSAGE);
         } else if (clean.contains("Fail")) {
             JOptionPane.showMessageDialog(null, "There is a cleanliness concern that requires attention " + "\n" + "\n             " + comments, "Alert", JOptionPane.WARNING_MESSAGE);
         }
     }


 } catch (HeadlessException | ClassNotFoundException | SQLException e) {
     JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_jButton4ActionPerformed
// add key events for tab buttons
    private void a1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a1KeyPressed
        // TODO add your handling code here:
                if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            b.grabFocus();
            evt.consume();
                }
    }//GEN-LAST:event_a1KeyPressed

    private void bKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bKeyPressed
        // TODO add your handling code here:
                if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            c.grabFocus();
            evt.consume();
                }
    }//GEN-LAST:event_bKeyPressed

    private void cKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cKeyPressed
        // TODO add your handling code here:
                        if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            d.grabFocus();
            evt.consume();
                }
    }//GEN-LAST:event_cKeyPressed

    private void dKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dKeyPressed
        // TODO add your handling code here:
                        if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            e1.grabFocus();
            evt.consume();
                }
    }//GEN-LAST:event_dKeyPressed

    private void e1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e1KeyPressed
        // TODO add your handling code here:
                        if(evt.getKeyCode() == KeyEvent.VK_TAB ) {

            g.grabFocus();
            evt.consume();
                }
    }//GEN-LAST:event_e1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Habitat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane a;
    private javax.swing.JTextPane a1;
    private javax.swing.JTextPane b;
    private javax.swing.JTextPane c;
    private javax.swing.JComboBox<String> d;
    private javax.swing.JComboBox<String> e1;
    private javax.swing.JTextPane f;
    private javax.swing.JTextPane g;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
